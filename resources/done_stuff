sudo dpkg --add-architecture armhf
aanpassen /etc/apt/sources.list, overal [arch=amd64] opgenomen en regel gecopieerd, dan [arch=armhf] en ports.ubuntu.com
sudo apt install libsfml-dev:armhf
sudo apt install qemu-user-static
sudo apt install lxsession

https://ubuntu-mate.community/t/tutorial-activate-opengl-driver-for-ubuntu-mate-16-04/7094

sudo apt-get install libgphoto2-dev:armhf tbv uitzoeken https://github.com/opencv/opencv/blob/master/samples/cpp/autofocus.cpp
cd ~/opencv-3.2.0
mkdir build
cd build
cmake -DCMAKE_C_FLAGS="-O3 -pipe -fPIC -mfpu=neon-fp-armv8 -funsafe-math-optimizations -mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard" -DCMAKE_CXX_FLAGS="-O3 -pipe -fPIC -mfpu=neon-fp-armv8 -funsafe-math-optimizations -mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard" -DCMAKE_BUILD_TYPE=RELEASE -DWITH_JPEG=ON -DWITH_OPENCL=ON -DWITH-GPHOTO2=ON -DENABLE_VFPV3=ON -DENABLE_NEON=ON -DWITH_FFMPEG=ON ..
make -j3


opencv_modules.hpp wordt pas aangemaakt tijdens het build proces. Dus even doorkopieren

compileren opencv 4 met:
git clone https://github.com/opencv/opencv.git
cd opencv
mkdir build
cd build
cmake -DCMAKE_C_FLAGS="-O3 -pipe -fPIC -mfpu=neon-fp-armv8 -funsafe-math-optimizations -mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard" -DCMAKE_CXX_FLAGS="-O3 -pipe -fPIC -mfpu=neon-fp-armv8 -funsafe-math-optimizations -mcpu=cortex-a53 -mfpu=neon-fp-armv8 -mfloat-abi=hard" -DCMAKE_BUILD_TYPE=RELEASE -DWITH_JPEG=ON -DWITH_OPENGL=ON -DENABLE_VFPV3=ON -DENABLE_NEON=ON -DWITH_FFMPEG=ON -DWITH_GPHOTO2=ON ..
make -j 4
sudo make install

install benodigde libraries:
sudo apt install libavcodec-ffmpeg56
sudo apt install libavformat-ffmpeg56
sudo apt install libswscale-ffmpeg3

